{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,SAAUF,SAASC,cAAc,mBACjCE,WAAYH,SAASC,cAAc,kBACnCG,UAAWJ,SAASC,cAAc,kBAGpC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIPT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAyBC,GACvBA,EAAMC,iBAMN,IAJA,IAAIC,EAAUC,OAAOrB,EAAKK,WAAWiB,OACjCC,EAAiBF,OAAOrB,EAAKM,UAAUgB,OACvCE,EAAcH,OAAOrB,EAAKI,SAASkB,OAE9BG,EAAI,EAAGA,GAAKD,EAAaC,IAAK,CACjCA,EAAI,IACNL,GAAWG,GAIbhB,EADiBkB,EACSL,GACvBM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  stepDelay: document.querySelector('[name=\"step\"]'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', handlerBtnClick);\n\nfunction handlerBtnClick(event) {\n  event.preventDefault();\n\n  let delayEL = Number(refs.firstDelay.value);\n  let stepDelayValue = Number(refs.stepDelay.value);\n  let amountValue = Number(refs.amountEl.value);\n\n  for (let i = 1; i <= amountValue; i++) {\n    if (i > 1) {\n      delayEL += stepDelayValue;\n    }\n\n    let positionEL = i;\n    createPromise(positionEL, delayEL)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","amountEl","firstDelay","stepDelay","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayEL","Number","value","stepDelayValue","amountValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.de9ad85a.js.map"}